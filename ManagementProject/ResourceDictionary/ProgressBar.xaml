<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"                    
                    xmlns:chart="clr-namespace:ManagementProject.UserControls.ChartControls"
                    xmlns:my="clr-namespace:ManagementProject.Converters">

    <my:AngleToPointConverter x:Key="prConverter" />
    <my:AngleToIsLargeConverter x:Key="isLargeConverter" />
    <my:RadiusToSizeConverter x:Key="sizeConverter" />
    <my:StrokeToStartPointConverter x:Key="spconverter" />
    <my:RadiusToCenterConverter x:Key="rtocConverter" />
    <my:RadiusToDiameter x:Key="radtodia" />
    <my:InnerRadiusConverter x:Key="innerRadConverter" />
    <my:StrokeLineCapConverter x:Key="lineCapConverter" />

    <Style x:Key="CircularProgressBarStyle" TargetType="chart:CircularProgressBar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="chart:CircularProgressBar">
                    <Grid
                        Width="{Binding Path=Radius, Converter={StaticResource radtodia},RelativeSource={RelativeSource AncestorType=ProgressBar}}"
                        Height="{Binding Path=Radius, Converter={StaticResource radtodia}, RelativeSource={RelativeSource AncestorType=ProgressBar}}">

                        <Path Stroke="{TemplateBinding Stroke}" 
                              StrokeThickness="{TemplateBinding StrokeThickness}" 
                              Fill="{TemplateBinding Fill}">
                            <Path.Data>
                                <EllipseGeometry
                                    Center="{Binding Path=Radius,Converter={StaticResource rtocConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType=ProgressBar}}">
                                    <EllipseGeometry.RadiusX>
                                        <MultiBinding Converter="{StaticResource innerRadConverter}">
                                            <Binding Path="Radius"
                                                     RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ProgressBar}" />
                                            <Binding Path="Thickness"
                                                     RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ProgressBar}" />
                                            <Binding Path="StrokeMode"
                                                     RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ProgressBar}" />
                                        </MultiBinding>
                                    </EllipseGeometry.RadiusX>
                                    <EllipseGeometry.RadiusY>
                                        <Binding Path="RadiusX" RelativeSource="{RelativeSource Self}" />
                                    </EllipseGeometry.RadiusY>
                                </EllipseGeometry>
                            </Path.Data>
                        </Path>

                        <Path Stroke="{TemplateBinding Background}"
                              StrokeThickness="{TemplateBinding Thickness}">
                            <Path.StrokeStartLineCap>
                                <MultiBinding Converter="{StaticResource lineCapConverter}">
                                    <Binding Path="Value"
                                             RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ProgressBar}"/>
                                    <Binding Path="StartLineCap"
                                             RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ProgressBar}"/>
                                </MultiBinding>
                            </Path.StrokeStartLineCap>
                            <Path.StrokeEndLineCap>
                                <MultiBinding Converter="{StaticResource lineCapConverter}">
                                    <Binding Path="Value"
                                             RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ProgressBar}"/>
                                    <Binding Path="EndLineCap"
                                             RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ProgressBar}"/>
                                </MultiBinding>
                            </Path.StrokeEndLineCap>
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure>
                                        <PathFigure.StartPoint>
                                            <MultiBinding Converter="{StaticResource spconverter}">
                                                <Binding Path="Radius"
                                                         RelativeSource="{RelativeSource FindAncestor, AncestorType=ProgressBar}" />
                                                <Binding Path="Thickness"
                                                         RelativeSource="{RelativeSource FindAncestor, AncestorType=ProgressBar}" />
                                            </MultiBinding>
                                        </PathFigure.StartPoint>

                                        <ArcSegment x:Name="arcSegment"
                                            RotationAngle="0" SweepDirection="Clockwise"
                                                    IsLargeArc="{Binding Path=Angle, Converter={StaticResource isLargeConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType=ProgressBar}}"
                                                    >
                                            <ArcSegment.Point>
                                                <MultiBinding Converter="{StaticResource prConverter}">
                                                    <Binding Path="Angle"
                                                             RelativeSource="{RelativeSource FindAncestor, AncestorType=ProgressBar}" />
                                                    <Binding Path="Radius"
                                                             RelativeSource="{RelativeSource FindAncestor, AncestorType=ProgressBar}" />
                                                    <Binding Path="Thickness"
                                                             RelativeSource="{RelativeSource FindAncestor, AncestorType=ProgressBar}" />
                                                </MultiBinding>
                                            </ArcSegment.Point>
                                            <ArcSegment.Size>
                                                <MultiBinding Converter="{StaticResource sizeConverter}">
                                                    <Binding Path="Radius"
                                                             RelativeSource="{RelativeSource FindAncestor, AncestorType=ProgressBar}" />
                                                    <Binding Path="Thickness"
                                                             RelativeSource="{RelativeSource FindAncestor, AncestorType=ProgressBar}" />
                                                </MultiBinding>
                                            </ArcSegment.Size>
                                        </ArcSegment>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--历史事件进度条 -->
    <SolidColorBrush x:Key="ProgressBar.Progress" Color="#009fff"/>
    <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="ProgressBar.Border" Color="#FFBCBCBC"/>
    <Style x:Key="ProgressBarStyle1" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
        <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <Rectangle x:Name="PART_Track"/>
                        <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                            <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                            <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>